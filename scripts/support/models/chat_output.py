# generated by datamodel-codegen:
#   filename:  tmp_schema.json
#   timestamp: 2025-04-20T14:18:51+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class TokenUsage(BaseModel):
    completion_tokens: Annotated[
        int, Field(description='How many tokens were used in the response?', ge=0)
    ]
    prompt_tokens: Annotated[
        int, Field(description='How many tokens were used in the prompt?', ge=0)
    ]


class ChatOutput(BaseModel):
    errors: Annotated[
        Optional[List[str]],
        Field(
            description='Any errors that occurred. Some errors may be present, even on success, if the LLM recovered from a transient error.'
        ),
    ] = None
    estimated_cost: Annotated[
        Optional[float],
        Field(description='Estimated cost, if we have the data to compute it.'),
    ] = None
    id: Annotated[Any, Field(description="The record's unique identifier.")]
    response: Annotated[
        Optional[Any],
        Field(
            description='The response from the LLM. If this is present, the request succeeded.'
        ),
    ] = None
    token_usage: Annotated[
        Optional[TokenUsage], Field(description='The token usage for this request.')
    ] = None
